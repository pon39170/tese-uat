// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStudentID holds the string denoting the student_id field in the database.
	FieldStudentID = "student_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldIdentificationNumber holds the string denoting the identification_number field in the database.
	FieldIdentificationNumber = "identification_number"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"

	// EdgePlaylists holds the string denoting the playlists edge name in mutations.
	EdgePlaylists = "playlists"
	// EdgeVideos holds the string denoting the videos edge name in mutations.
	EdgeVideos = "videos"
	// EdgePlaylistVideos holds the string denoting the playlist_videos edge name in mutations.
	EdgePlaylistVideos = "playlist_videos"

	// Table holds the table name of the user in the database.
	Table = "users"
	// PlaylistsTable is the table the holds the playlists relation/edge.
	PlaylistsTable = "playlists"
	// PlaylistsInverseTable is the table name for the Playlist entity.
	// It exists in this package in order to avoid circular dependency with the "playlist" package.
	PlaylistsInverseTable = "playlists"
	// PlaylistsColumn is the table column denoting the playlists relation/edge.
	PlaylistsColumn = "owner_id"
	// VideosTable is the table the holds the videos relation/edge.
	VideosTable = "videos"
	// VideosInverseTable is the table name for the Video entity.
	// It exists in this package in order to avoid circular dependency with the "video" package.
	VideosInverseTable = "videos"
	// VideosColumn is the table column denoting the videos relation/edge.
	VideosColumn = "owner_id"
	// PlaylistVideosTable is the table the holds the playlist_videos relation/edge.
	PlaylistVideosTable = "playlist_videos"
	// PlaylistVideosInverseTable is the table name for the Playlist_Video entity.
	// It exists in this package in order to avoid circular dependency with the "playlist_video" package.
	PlaylistVideosInverseTable = "playlist_videos"
	// PlaylistVideosColumn is the table column denoting the playlist_videos relation/edge.
	PlaylistVideosColumn = "User_id"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldStudentID,
	FieldName,
	FieldIdentificationNumber,
	FieldEmail,
	FieldAge,
}

var (
	// StudentIDValidator is a validator for the "student_id" field. It is called by the builders before save.
	StudentIDValidator func(string) error
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// IdentificationNumberValidator is a validator for the "identification_number" field. It is called by the builders before save.
	IdentificationNumberValidator func(string) error
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// AgeValidator is a validator for the "age" field. It is called by the builders before save.
	AgeValidator func(int) error
)
